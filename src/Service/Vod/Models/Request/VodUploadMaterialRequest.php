<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: volcengine/vod/request/request_vod.proto

namespace Volc\Service\Vod\Models\Request;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>Volcengine.Vod.Models.Request.VodUploadMaterialRequest</code>
 */
class VodUploadMaterialRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * 上传的空间名 
     *
     * Generated from protobuf field <code>string SpaceName = 1;</code>
     */
    protected $SpaceName = '';
    /**
     * 上传文件的路径 
     *
     * Generated from protobuf field <code>string FilePath = 2;</code>
     */
    protected $FilePath = '';
    /**
     * 业务希望上传透传的信息，会在上传成功时返回给用户 
     *
     * Generated from protobuf field <code>string CallbackArgs = 3;</code>
     */
    protected $CallbackArgs = '';
    /**
     * 上传的功能函数 
     *
     * Generated from protobuf field <code>string Functions = 4;</code>
     */
    protected $Functions = '';
    /**
     * 上传的类型，media、image、object 默认为 media 
     *
     * Generated from protobuf field <code>string FileType = 5;</code>
     */
    protected $FileType = '';
    /**
     * 上传的文件在存储中的名字，即 bucket/key 中的 key 
     *
     * Generated from protobuf field <code>string FileName = 6;</code>
     */
    protected $FileName = '';
    /**
     * 上传中文件的文件后缀 
     *
     * Generated from protobuf field <code>string FileExtension = 7;</code>
     */
    protected $FileExtension = '';
    /**
     * 上传策略 
     *
     * Generated from protobuf field <code>int32 UploadStrategy = 8;</code>
     */
    protected $UploadStrategy = 0;
    /**
     * 分片并发数 
     *
     * Generated from protobuf field <code>int32 ParallelNum = 9;</code>
     */
    protected $ParallelNum = 0;
    /**
     * 客户端网络环境 
     *
     * Generated from protobuf field <code>string ClientNetWorkMode = 10;</code>
     */
    protected $ClientNetWorkMode = '';
    /**
     * 客户端机房环境 
     *
     * Generated from protobuf field <code>string ClientIDCMode = 11;</code>
     */
    protected $ClientIDCMode = '';
    /**
     * 上传域名偏好 
     *
     * Generated from protobuf field <code>string UploadHostPrefer = 12;</code>
     */
    protected $UploadHostPrefer = '';
    /**
     * 大文件上传分片大小，最小20MB 
     *
     * Generated from protobuf field <code>int64 ChunkSize = 13;</code>
     */
    protected $ChunkSize = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $SpaceName
     *           上传的空间名 
     *     @type string $FilePath
     *           上传文件的路径 
     *     @type string $CallbackArgs
     *           业务希望上传透传的信息，会在上传成功时返回给用户 
     *     @type string $Functions
     *           上传的功能函数 
     *     @type string $FileType
     *           上传的类型，media、image、object 默认为 media 
     *     @type string $FileName
     *           上传的文件在存储中的名字，即 bucket/key 中的 key 
     *     @type string $FileExtension
     *           上传中文件的文件后缀 
     *     @type int $UploadStrategy
     *           上传策略 
     *     @type int $ParallelNum
     *           分片并发数 
     *     @type string $ClientNetWorkMode
     *           客户端网络环境 
     *     @type string $ClientIDCMode
     *           客户端机房环境 
     *     @type string $UploadHostPrefer
     *           上传域名偏好 
     *     @type int|string $ChunkSize
     *           大文件上传分片大小，最小20MB 
     * }
     */
    public function __construct($data = NULL) {
        \Volc\Service\Vod\Models\GPBMetadata\RequestVod::initOnce();
        parent::__construct($data);
    }

    /**
     * 上传的空间名 
     *
     * Generated from protobuf field <code>string SpaceName = 1;</code>
     * @return string
     */
    public function getSpaceName()
    {
        return $this->SpaceName;
    }

    /**
     * 上传的空间名 
     *
     * Generated from protobuf field <code>string SpaceName = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setSpaceName($var)
    {
        GPBUtil::checkString($var, True);
        $this->SpaceName = $var;

        return $this;
    }

    /**
     * 上传文件的路径 
     *
     * Generated from protobuf field <code>string FilePath = 2;</code>
     * @return string
     */
    public function getFilePath()
    {
        return $this->FilePath;
    }

    /**
     * 上传文件的路径 
     *
     * Generated from protobuf field <code>string FilePath = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setFilePath($var)
    {
        GPBUtil::checkString($var, True);
        $this->FilePath = $var;

        return $this;
    }

    /**
     * 业务希望上传透传的信息，会在上传成功时返回给用户 
     *
     * Generated from protobuf field <code>string CallbackArgs = 3;</code>
     * @return string
     */
    public function getCallbackArgs()
    {
        return $this->CallbackArgs;
    }

    /**
     * 业务希望上传透传的信息，会在上传成功时返回给用户 
     *
     * Generated from protobuf field <code>string CallbackArgs = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setCallbackArgs($var)
    {
        GPBUtil::checkString($var, True);
        $this->CallbackArgs = $var;

        return $this;
    }

    /**
     * 上传的功能函数 
     *
     * Generated from protobuf field <code>string Functions = 4;</code>
     * @return string
     */
    public function getFunctions()
    {
        return $this->Functions;
    }

    /**
     * 上传的功能函数 
     *
     * Generated from protobuf field <code>string Functions = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setFunctions($var)
    {
        GPBUtil::checkString($var, True);
        $this->Functions = $var;

        return $this;
    }

    /**
     * 上传的类型，media、image、object 默认为 media 
     *
     * Generated from protobuf field <code>string FileType = 5;</code>
     * @return string
     */
    public function getFileType()
    {
        return $this->FileType;
    }

    /**
     * 上传的类型，media、image、object 默认为 media 
     *
     * Generated from protobuf field <code>string FileType = 5;</code>
     * @param string $var
     * @return $this
     */
    public function setFileType($var)
    {
        GPBUtil::checkString($var, True);
        $this->FileType = $var;

        return $this;
    }

    /**
     * 上传的文件在存储中的名字，即 bucket/key 中的 key 
     *
     * Generated from protobuf field <code>string FileName = 6;</code>
     * @return string
     */
    public function getFileName()
    {
        return $this->FileName;
    }

    /**
     * 上传的文件在存储中的名字，即 bucket/key 中的 key 
     *
     * Generated from protobuf field <code>string FileName = 6;</code>
     * @param string $var
     * @return $this
     */
    public function setFileName($var)
    {
        GPBUtil::checkString($var, True);
        $this->FileName = $var;

        return $this;
    }

    /**
     * 上传中文件的文件后缀 
     *
     * Generated from protobuf field <code>string FileExtension = 7;</code>
     * @return string
     */
    public function getFileExtension()
    {
        return $this->FileExtension;
    }

    /**
     * 上传中文件的文件后缀 
     *
     * Generated from protobuf field <code>string FileExtension = 7;</code>
     * @param string $var
     * @return $this
     */
    public function setFileExtension($var)
    {
        GPBUtil::checkString($var, True);
        $this->FileExtension = $var;

        return $this;
    }

    /**
     * 上传策略 
     *
     * Generated from protobuf field <code>int32 UploadStrategy = 8;</code>
     * @return int
     */
    public function getUploadStrategy()
    {
        return $this->UploadStrategy;
    }

    /**
     * 上传策略 
     *
     * Generated from protobuf field <code>int32 UploadStrategy = 8;</code>
     * @param int $var
     * @return $this
     */
    public function setUploadStrategy($var)
    {
        GPBUtil::checkInt32($var);
        $this->UploadStrategy = $var;

        return $this;
    }

    /**
     * 分片并发数 
     *
     * Generated from protobuf field <code>int32 ParallelNum = 9;</code>
     * @return int
     */
    public function getParallelNum()
    {
        return $this->ParallelNum;
    }

    /**
     * 分片并发数 
     *
     * Generated from protobuf field <code>int32 ParallelNum = 9;</code>
     * @param int $var
     * @return $this
     */
    public function setParallelNum($var)
    {
        GPBUtil::checkInt32($var);
        $this->ParallelNum = $var;

        return $this;
    }

    /**
     * 客户端网络环境 
     *
     * Generated from protobuf field <code>string ClientNetWorkMode = 10;</code>
     * @return string
     */
    public function getClientNetWorkMode()
    {
        return $this->ClientNetWorkMode;
    }

    /**
     * 客户端网络环境 
     *
     * Generated from protobuf field <code>string ClientNetWorkMode = 10;</code>
     * @param string $var
     * @return $this
     */
    public function setClientNetWorkMode($var)
    {
        GPBUtil::checkString($var, True);
        $this->ClientNetWorkMode = $var;

        return $this;
    }

    /**
     * 客户端机房环境 
     *
     * Generated from protobuf field <code>string ClientIDCMode = 11;</code>
     * @return string
     */
    public function getClientIDCMode()
    {
        return $this->ClientIDCMode;
    }

    /**
     * 客户端机房环境 
     *
     * Generated from protobuf field <code>string ClientIDCMode = 11;</code>
     * @param string $var
     * @return $this
     */
    public function setClientIDCMode($var)
    {
        GPBUtil::checkString($var, True);
        $this->ClientIDCMode = $var;

        return $this;
    }

    /**
     * 上传域名偏好 
     *
     * Generated from protobuf field <code>string UploadHostPrefer = 12;</code>
     * @return string
     */
    public function getUploadHostPrefer()
    {
        return $this->UploadHostPrefer;
    }

    /**
     * 上传域名偏好 
     *
     * Generated from protobuf field <code>string UploadHostPrefer = 12;</code>
     * @param string $var
     * @return $this
     */
    public function setUploadHostPrefer($var)
    {
        GPBUtil::checkString($var, True);
        $this->UploadHostPrefer = $var;

        return $this;
    }

    /**
     * 大文件上传分片大小，最小20MB 
     *
     * Generated from protobuf field <code>int64 ChunkSize = 13;</code>
     * @return int|string
     */
    public function getChunkSize()
    {
        return $this->ChunkSize;
    }

    /**
     * 大文件上传分片大小，最小20MB 
     *
     * Generated from protobuf field <code>int64 ChunkSize = 13;</code>
     * @param int|string $var
     * @return $this
     */
    public function setChunkSize($var)
    {
        GPBUtil::checkInt64($var);
        $this->ChunkSize = $var;

        return $this;
    }

}

