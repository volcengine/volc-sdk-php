<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: volcengine/vod/business/vod_cdn.proto

namespace Volc\Service\Vod\Models\Business;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>Volcengine.Vod.Models.Business.RefererAccessRule</code>
 */
class RefererAccessRule extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>optional bool AllowEmpty = 1;</code>
     */
    protected $AllowEmpty = null;
    /**
     * Generated from protobuf field <code>repeated string Referers = 2;</code>
     */
    private $Referers;
    /**
     * Generated from protobuf field <code>optional .Volcengine.Vod.Models.Business.ReferersType ReferersType = 3;</code>
     */
    protected $ReferersType = null;
    /**
     * Generated from protobuf field <code>optional string RuleType = 4;</code>
     */
    protected $RuleType = null;
    /**
     * Generated from protobuf field <code>optional bool Switch = 6;</code>
     */
    protected $Switch = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type bool $AllowEmpty
     *     @type string[]|\Google\Protobuf\Internal\RepeatedField $Referers
     *     @type \Volc\Service\Vod\Models\Business\ReferersType $ReferersType
     *     @type string $RuleType
     *     @type bool $Switch
     * }
     */
    public function __construct($data = NULL) {
        \Volc\Service\Vod\Models\GPBMetadata\VodCdn::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>optional bool AllowEmpty = 1;</code>
     * @return bool
     */
    public function getAllowEmpty()
    {
        return isset($this->AllowEmpty) ? $this->AllowEmpty : false;
    }

    public function hasAllowEmpty()
    {
        return isset($this->AllowEmpty);
    }

    public function clearAllowEmpty()
    {
        unset($this->AllowEmpty);
    }

    /**
     * Generated from protobuf field <code>optional bool AllowEmpty = 1;</code>
     * @param bool $var
     * @return $this
     */
    public function setAllowEmpty($var)
    {
        GPBUtil::checkBool($var);
        $this->AllowEmpty = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>repeated string Referers = 2;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getReferers()
    {
        return $this->Referers;
    }

    /**
     * Generated from protobuf field <code>repeated string Referers = 2;</code>
     * @param string[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setReferers($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->Referers = $arr;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional .Volcengine.Vod.Models.Business.ReferersType ReferersType = 3;</code>
     * @return \Volc\Service\Vod\Models\Business\ReferersType|null
     */
    public function getReferersType()
    {
        return $this->ReferersType;
    }

    public function hasReferersType()
    {
        return isset($this->ReferersType);
    }

    public function clearReferersType()
    {
        unset($this->ReferersType);
    }

    /**
     * Generated from protobuf field <code>optional .Volcengine.Vod.Models.Business.ReferersType ReferersType = 3;</code>
     * @param \Volc\Service\Vod\Models\Business\ReferersType $var
     * @return $this
     */
    public function setReferersType($var)
    {
        GPBUtil::checkMessage($var, \Volc\Service\Vod\Models\Business\ReferersType::class);
        $this->ReferersType = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional string RuleType = 4;</code>
     * @return string
     */
    public function getRuleType()
    {
        return isset($this->RuleType) ? $this->RuleType : '';
    }

    public function hasRuleType()
    {
        return isset($this->RuleType);
    }

    public function clearRuleType()
    {
        unset($this->RuleType);
    }

    /**
     * Generated from protobuf field <code>optional string RuleType = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setRuleType($var)
    {
        GPBUtil::checkString($var, True);
        $this->RuleType = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional bool Switch = 6;</code>
     * @return bool
     */
    public function getSwitch()
    {
        return isset($this->Switch) ? $this->Switch : false;
    }

    public function hasSwitch()
    {
        return isset($this->Switch);
    }

    public function clearSwitch()
    {
        unset($this->Switch);
    }

    /**
     * Generated from protobuf field <code>optional bool Switch = 6;</code>
     * @param bool $var
     * @return $this
     */
    public function setSwitch($var)
    {
        GPBUtil::checkBool($var);
        $this->Switch = $var;

        return $this;
    }

}

