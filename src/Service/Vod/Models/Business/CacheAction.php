<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: volcengine/vod/business/vod_cdn.proto

namespace Volc\Service\Vod\Models\Business;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>Volcengine.Vod.Models.Business.CacheAction</code>
 */
class CacheAction extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>optional string Action = 1;</code>
     */
    protected $Action = null;
    /**
     * Generated from protobuf field <code>optional string DefaultPolicy = 2;</code>
     */
    protected $DefaultPolicy = null;
    /**
     * Generated from protobuf field <code>optional bool IgnoreCase = 3;</code>
     */
    protected $IgnoreCase = null;
    /**
     * Generated from protobuf field <code>optional int64 Ttl = 4;</code>
     */
    protected $Ttl = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $Action
     *     @type string $DefaultPolicy
     *     @type bool $IgnoreCase
     *     @type int|string $Ttl
     * }
     */
    public function __construct($data = NULL) {
        \Volc\Service\Vod\Models\GPBMetadata\VodCdn::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>optional string Action = 1;</code>
     * @return string
     */
    public function getAction()
    {
        return isset($this->Action) ? $this->Action : '';
    }

    public function hasAction()
    {
        return isset($this->Action);
    }

    public function clearAction()
    {
        unset($this->Action);
    }

    /**
     * Generated from protobuf field <code>optional string Action = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setAction($var)
    {
        GPBUtil::checkString($var, True);
        $this->Action = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional string DefaultPolicy = 2;</code>
     * @return string
     */
    public function getDefaultPolicy()
    {
        return isset($this->DefaultPolicy) ? $this->DefaultPolicy : '';
    }

    public function hasDefaultPolicy()
    {
        return isset($this->DefaultPolicy);
    }

    public function clearDefaultPolicy()
    {
        unset($this->DefaultPolicy);
    }

    /**
     * Generated from protobuf field <code>optional string DefaultPolicy = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setDefaultPolicy($var)
    {
        GPBUtil::checkString($var, True);
        $this->DefaultPolicy = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional bool IgnoreCase = 3;</code>
     * @return bool
     */
    public function getIgnoreCase()
    {
        return isset($this->IgnoreCase) ? $this->IgnoreCase : false;
    }

    public function hasIgnoreCase()
    {
        return isset($this->IgnoreCase);
    }

    public function clearIgnoreCase()
    {
        unset($this->IgnoreCase);
    }

    /**
     * Generated from protobuf field <code>optional bool IgnoreCase = 3;</code>
     * @param bool $var
     * @return $this
     */
    public function setIgnoreCase($var)
    {
        GPBUtil::checkBool($var);
        $this->IgnoreCase = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional int64 Ttl = 4;</code>
     * @return int|string
     */
    public function getTtl()
    {
        return isset($this->Ttl) ? $this->Ttl : 0;
    }

    public function hasTtl()
    {
        return isset($this->Ttl);
    }

    public function clearTtl()
    {
        unset($this->Ttl);
    }

    /**
     * Generated from protobuf field <code>optional int64 Ttl = 4;</code>
     * @param int|string $var
     * @return $this
     */
    public function setTtl($var)
    {
        GPBUtil::checkInt64($var);
        $this->Ttl = $var;

        return $this;
    }

}

