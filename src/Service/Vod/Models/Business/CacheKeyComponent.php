<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: volcengine/vod/business/vod_cdn.proto

namespace Volc\Service\Vod\Models\Business;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>Volcengine.Vod.Models.Business.CacheKeyComponent</code>
 */
class CacheKeyComponent extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>optional string Action = 1;</code>
     */
    protected $Action = null;
    /**
     * Generated from protobuf field <code>optional bool IgnoreCase = 2;</code>
     */
    protected $IgnoreCase = null;
    /**
     * Generated from protobuf field <code>optional string Object = 3;</code>
     */
    protected $Object = null;
    /**
     * Generated from protobuf field <code>optional string Subobject = 4;</code>
     */
    protected $Subobject = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $Action
     *     @type bool $IgnoreCase
     *     @type string $Object
     *     @type string $Subobject
     * }
     */
    public function __construct($data = NULL) {
        \Volc\Service\Vod\Models\GPBMetadata\VodCdn::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>optional string Action = 1;</code>
     * @return string
     */
    public function getAction()
    {
        return isset($this->Action) ? $this->Action : '';
    }

    public function hasAction()
    {
        return isset($this->Action);
    }

    public function clearAction()
    {
        unset($this->Action);
    }

    /**
     * Generated from protobuf field <code>optional string Action = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setAction($var)
    {
        GPBUtil::checkString($var, True);
        $this->Action = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional bool IgnoreCase = 2;</code>
     * @return bool
     */
    public function getIgnoreCase()
    {
        return isset($this->IgnoreCase) ? $this->IgnoreCase : false;
    }

    public function hasIgnoreCase()
    {
        return isset($this->IgnoreCase);
    }

    public function clearIgnoreCase()
    {
        unset($this->IgnoreCase);
    }

    /**
     * Generated from protobuf field <code>optional bool IgnoreCase = 2;</code>
     * @param bool $var
     * @return $this
     */
    public function setIgnoreCase($var)
    {
        GPBUtil::checkBool($var);
        $this->IgnoreCase = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional string Object = 3;</code>
     * @return string
     */
    public function getObject()
    {
        return isset($this->Object) ? $this->Object : '';
    }

    public function hasObject()
    {
        return isset($this->Object);
    }

    public function clearObject()
    {
        unset($this->Object);
    }

    /**
     * Generated from protobuf field <code>optional string Object = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setObject($var)
    {
        GPBUtil::checkString($var, True);
        $this->Object = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional string Subobject = 4;</code>
     * @return string
     */
    public function getSubobject()
    {
        return isset($this->Subobject) ? $this->Subobject : '';
    }

    public function hasSubobject()
    {
        return isset($this->Subobject);
    }

    public function clearSubobject()
    {
        unset($this->Subobject);
    }

    /**
     * Generated from protobuf field <code>optional string Subobject = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setSubobject($var)
    {
        GPBUtil::checkString($var, True);
        $this->Subobject = $var;

        return $this;
    }

}

