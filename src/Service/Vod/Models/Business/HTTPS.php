<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: volcengine/vod/business/vod_cdn.proto

namespace Volc\Service\Vod\Models\Business;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>Volcengine.Vod.Models.Business.HTTPS</code>
 */
class HTTPS extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>optional bool Switch = 1;</code>
     */
    protected $Switch = null;
    /**
     * Generated from protobuf field <code>optional .Volcengine.Vod.Models.Business.CertInfo CertInfo = 2;</code>
     */
    protected $CertInfo = null;
    /**
     * Generated from protobuf field <code>optional .Volcengine.Vod.Models.Business.ForcedRedirect ForcedRedirect = 3;</code>
     */
    protected $ForcedRedirect = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type bool $Switch
     *     @type \Volc\Service\Vod\Models\Business\CertInfo $CertInfo
     *     @type \Volc\Service\Vod\Models\Business\ForcedRedirect $ForcedRedirect
     * }
     */
    public function __construct($data = NULL) {
        \Volc\Service\Vod\Models\GPBMetadata\VodCdn::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>optional bool Switch = 1;</code>
     * @return bool
     */
    public function getSwitch()
    {
        return isset($this->Switch) ? $this->Switch : false;
    }

    public function hasSwitch()
    {
        return isset($this->Switch);
    }

    public function clearSwitch()
    {
        unset($this->Switch);
    }

    /**
     * Generated from protobuf field <code>optional bool Switch = 1;</code>
     * @param bool $var
     * @return $this
     */
    public function setSwitch($var)
    {
        GPBUtil::checkBool($var);
        $this->Switch = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional .Volcengine.Vod.Models.Business.CertInfo CertInfo = 2;</code>
     * @return \Volc\Service\Vod\Models\Business\CertInfo|null
     */
    public function getCertInfo()
    {
        return $this->CertInfo;
    }

    public function hasCertInfo()
    {
        return isset($this->CertInfo);
    }

    public function clearCertInfo()
    {
        unset($this->CertInfo);
    }

    /**
     * Generated from protobuf field <code>optional .Volcengine.Vod.Models.Business.CertInfo CertInfo = 2;</code>
     * @param \Volc\Service\Vod\Models\Business\CertInfo $var
     * @return $this
     */
    public function setCertInfo($var)
    {
        GPBUtil::checkMessage($var, \Volc\Service\Vod\Models\Business\CertInfo::class);
        $this->CertInfo = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional .Volcengine.Vod.Models.Business.ForcedRedirect ForcedRedirect = 3;</code>
     * @return \Volc\Service\Vod\Models\Business\ForcedRedirect|null
     */
    public function getForcedRedirect()
    {
        return $this->ForcedRedirect;
    }

    public function hasForcedRedirect()
    {
        return isset($this->ForcedRedirect);
    }

    public function clearForcedRedirect()
    {
        unset($this->ForcedRedirect);
    }

    /**
     * Generated from protobuf field <code>optional .Volcengine.Vod.Models.Business.ForcedRedirect ForcedRedirect = 3;</code>
     * @param \Volc\Service\Vod\Models\Business\ForcedRedirect $var
     * @return $this
     */
    public function setForcedRedirect($var)
    {
        GPBUtil::checkMessage($var, \Volc\Service\Vod\Models\Business\ForcedRedirect::class);
        $this->ForcedRedirect = $var;

        return $this;
    }

}

