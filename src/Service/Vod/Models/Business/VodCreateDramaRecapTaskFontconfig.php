<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: volcengine/vod/business/vod_drama.proto

namespace Volc\Service\Vod\Models\Business;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>Volcengine.Vod.Models.Business.VodCreateDramaRecapTaskFontconfig</code>
 */
class VodCreateDramaRecapTaskFontconfig extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>bool NoSubtitle = 1;</code>
     */
    protected $NoSubtitle = false;
    /**
     * Generated from protobuf field <code>optional string FontType = 2;</code>
     */
    protected $FontType = null;
    /**
     * Generated from protobuf field <code>optional int32 FontSize = 3;</code>
     */
    protected $FontSize = null;
    /**
     * Generated from protobuf field <code>optional int32 Width = 4;</code>
     */
    protected $Width = null;
    /**
     * Generated from protobuf field <code>optional int32 Height = 5;</code>
     */
    protected $Height = null;
    /**
     * Generated from protobuf field <code>optional double Alpha = 6;</code>
     */
    protected $Alpha = null;
    /**
     * Generated from protobuf field <code>optional string TextRes = 7;</code>
     */
    protected $TextRes = null;
    /**
     * Generated from protobuf field <code>optional string FontColor = 8;</code>
     */
    protected $FontColor = null;
    /**
     * Generated from protobuf field <code>optional string BackgroundColor = 9;</code>
     */
    protected $BackgroundColor = null;
    /**
     * Generated from protobuf field <code>optional double BackgroundBorderSize = 10;</code>
     */
    protected $BackgroundBorderSize = null;
    /**
     * Generated from protobuf field <code>optional string BorderColor = 11;</code>
     */
    protected $BorderColor = null;
    /**
     * Generated from protobuf field <code>optional int32 BorderWidth = 12;</code>
     */
    protected $BorderWidth = null;
    /**
     * Generated from protobuf field <code>optional int32 Typesetting = 13;</code>
     */
    protected $Typesetting = null;
    /**
     * Generated from protobuf field <code>optional int32 AlignType = 14;</code>
     */
    protected $AlignType = null;
    /**
     * Generated from protobuf field <code>optional int32 PosX = 15;</code>
     */
    protected $PosX = null;
    /**
     * Generated from protobuf field <code>optional int32 PosY = 16;</code>
     */
    protected $PosY = null;
    /**
     * Generated from protobuf field <code>optional double LineMaxWidth = 17;</code>
     */
    protected $LineMaxWidth = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type bool $NoSubtitle
     *     @type string $FontType
     *     @type int $FontSize
     *     @type int $Width
     *     @type int $Height
     *     @type float $Alpha
     *     @type string $TextRes
     *     @type string $FontColor
     *     @type string $BackgroundColor
     *     @type float $BackgroundBorderSize
     *     @type string $BorderColor
     *     @type int $BorderWidth
     *     @type int $Typesetting
     *     @type int $AlignType
     *     @type int $PosX
     *     @type int $PosY
     *     @type float $LineMaxWidth
     * }
     */
    public function __construct($data = NULL) {
        \Volc\Service\Vod\Models\GPBMetadata\VodDrama::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>bool NoSubtitle = 1;</code>
     * @return bool
     */
    public function getNoSubtitle()
    {
        return $this->NoSubtitle;
    }

    /**
     * Generated from protobuf field <code>bool NoSubtitle = 1;</code>
     * @param bool $var
     * @return $this
     */
    public function setNoSubtitle($var)
    {
        GPBUtil::checkBool($var);
        $this->NoSubtitle = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional string FontType = 2;</code>
     * @return string
     */
    public function getFontType()
    {
        return isset($this->FontType) ? $this->FontType : '';
    }

    public function hasFontType()
    {
        return isset($this->FontType);
    }

    public function clearFontType()
    {
        unset($this->FontType);
    }

    /**
     * Generated from protobuf field <code>optional string FontType = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setFontType($var)
    {
        GPBUtil::checkString($var, True);
        $this->FontType = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional int32 FontSize = 3;</code>
     * @return int
     */
    public function getFontSize()
    {
        return isset($this->FontSize) ? $this->FontSize : 0;
    }

    public function hasFontSize()
    {
        return isset($this->FontSize);
    }

    public function clearFontSize()
    {
        unset($this->FontSize);
    }

    /**
     * Generated from protobuf field <code>optional int32 FontSize = 3;</code>
     * @param int $var
     * @return $this
     */
    public function setFontSize($var)
    {
        GPBUtil::checkInt32($var);
        $this->FontSize = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional int32 Width = 4;</code>
     * @return int
     */
    public function getWidth()
    {
        return isset($this->Width) ? $this->Width : 0;
    }

    public function hasWidth()
    {
        return isset($this->Width);
    }

    public function clearWidth()
    {
        unset($this->Width);
    }

    /**
     * Generated from protobuf field <code>optional int32 Width = 4;</code>
     * @param int $var
     * @return $this
     */
    public function setWidth($var)
    {
        GPBUtil::checkInt32($var);
        $this->Width = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional int32 Height = 5;</code>
     * @return int
     */
    public function getHeight()
    {
        return isset($this->Height) ? $this->Height : 0;
    }

    public function hasHeight()
    {
        return isset($this->Height);
    }

    public function clearHeight()
    {
        unset($this->Height);
    }

    /**
     * Generated from protobuf field <code>optional int32 Height = 5;</code>
     * @param int $var
     * @return $this
     */
    public function setHeight($var)
    {
        GPBUtil::checkInt32($var);
        $this->Height = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional double Alpha = 6;</code>
     * @return float
     */
    public function getAlpha()
    {
        return isset($this->Alpha) ? $this->Alpha : 0.0;
    }

    public function hasAlpha()
    {
        return isset($this->Alpha);
    }

    public function clearAlpha()
    {
        unset($this->Alpha);
    }

    /**
     * Generated from protobuf field <code>optional double Alpha = 6;</code>
     * @param float $var
     * @return $this
     */
    public function setAlpha($var)
    {
        GPBUtil::checkDouble($var);
        $this->Alpha = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional string TextRes = 7;</code>
     * @return string
     */
    public function getTextRes()
    {
        return isset($this->TextRes) ? $this->TextRes : '';
    }

    public function hasTextRes()
    {
        return isset($this->TextRes);
    }

    public function clearTextRes()
    {
        unset($this->TextRes);
    }

    /**
     * Generated from protobuf field <code>optional string TextRes = 7;</code>
     * @param string $var
     * @return $this
     */
    public function setTextRes($var)
    {
        GPBUtil::checkString($var, True);
        $this->TextRes = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional string FontColor = 8;</code>
     * @return string
     */
    public function getFontColor()
    {
        return isset($this->FontColor) ? $this->FontColor : '';
    }

    public function hasFontColor()
    {
        return isset($this->FontColor);
    }

    public function clearFontColor()
    {
        unset($this->FontColor);
    }

    /**
     * Generated from protobuf field <code>optional string FontColor = 8;</code>
     * @param string $var
     * @return $this
     */
    public function setFontColor($var)
    {
        GPBUtil::checkString($var, True);
        $this->FontColor = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional string BackgroundColor = 9;</code>
     * @return string
     */
    public function getBackgroundColor()
    {
        return isset($this->BackgroundColor) ? $this->BackgroundColor : '';
    }

    public function hasBackgroundColor()
    {
        return isset($this->BackgroundColor);
    }

    public function clearBackgroundColor()
    {
        unset($this->BackgroundColor);
    }

    /**
     * Generated from protobuf field <code>optional string BackgroundColor = 9;</code>
     * @param string $var
     * @return $this
     */
    public function setBackgroundColor($var)
    {
        GPBUtil::checkString($var, True);
        $this->BackgroundColor = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional double BackgroundBorderSize = 10;</code>
     * @return float
     */
    public function getBackgroundBorderSize()
    {
        return isset($this->BackgroundBorderSize) ? $this->BackgroundBorderSize : 0.0;
    }

    public function hasBackgroundBorderSize()
    {
        return isset($this->BackgroundBorderSize);
    }

    public function clearBackgroundBorderSize()
    {
        unset($this->BackgroundBorderSize);
    }

    /**
     * Generated from protobuf field <code>optional double BackgroundBorderSize = 10;</code>
     * @param float $var
     * @return $this
     */
    public function setBackgroundBorderSize($var)
    {
        GPBUtil::checkDouble($var);
        $this->BackgroundBorderSize = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional string BorderColor = 11;</code>
     * @return string
     */
    public function getBorderColor()
    {
        return isset($this->BorderColor) ? $this->BorderColor : '';
    }

    public function hasBorderColor()
    {
        return isset($this->BorderColor);
    }

    public function clearBorderColor()
    {
        unset($this->BorderColor);
    }

    /**
     * Generated from protobuf field <code>optional string BorderColor = 11;</code>
     * @param string $var
     * @return $this
     */
    public function setBorderColor($var)
    {
        GPBUtil::checkString($var, True);
        $this->BorderColor = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional int32 BorderWidth = 12;</code>
     * @return int
     */
    public function getBorderWidth()
    {
        return isset($this->BorderWidth) ? $this->BorderWidth : 0;
    }

    public function hasBorderWidth()
    {
        return isset($this->BorderWidth);
    }

    public function clearBorderWidth()
    {
        unset($this->BorderWidth);
    }

    /**
     * Generated from protobuf field <code>optional int32 BorderWidth = 12;</code>
     * @param int $var
     * @return $this
     */
    public function setBorderWidth($var)
    {
        GPBUtil::checkInt32($var);
        $this->BorderWidth = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional int32 Typesetting = 13;</code>
     * @return int
     */
    public function getTypesetting()
    {
        return isset($this->Typesetting) ? $this->Typesetting : 0;
    }

    public function hasTypesetting()
    {
        return isset($this->Typesetting);
    }

    public function clearTypesetting()
    {
        unset($this->Typesetting);
    }

    /**
     * Generated from protobuf field <code>optional int32 Typesetting = 13;</code>
     * @param int $var
     * @return $this
     */
    public function setTypesetting($var)
    {
        GPBUtil::checkInt32($var);
        $this->Typesetting = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional int32 AlignType = 14;</code>
     * @return int
     */
    public function getAlignType()
    {
        return isset($this->AlignType) ? $this->AlignType : 0;
    }

    public function hasAlignType()
    {
        return isset($this->AlignType);
    }

    public function clearAlignType()
    {
        unset($this->AlignType);
    }

    /**
     * Generated from protobuf field <code>optional int32 AlignType = 14;</code>
     * @param int $var
     * @return $this
     */
    public function setAlignType($var)
    {
        GPBUtil::checkInt32($var);
        $this->AlignType = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional int32 PosX = 15;</code>
     * @return int
     */
    public function getPosX()
    {
        return isset($this->PosX) ? $this->PosX : 0;
    }

    public function hasPosX()
    {
        return isset($this->PosX);
    }

    public function clearPosX()
    {
        unset($this->PosX);
    }

    /**
     * Generated from protobuf field <code>optional int32 PosX = 15;</code>
     * @param int $var
     * @return $this
     */
    public function setPosX($var)
    {
        GPBUtil::checkInt32($var);
        $this->PosX = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional int32 PosY = 16;</code>
     * @return int
     */
    public function getPosY()
    {
        return isset($this->PosY) ? $this->PosY : 0;
    }

    public function hasPosY()
    {
        return isset($this->PosY);
    }

    public function clearPosY()
    {
        unset($this->PosY);
    }

    /**
     * Generated from protobuf field <code>optional int32 PosY = 16;</code>
     * @param int $var
     * @return $this
     */
    public function setPosY($var)
    {
        GPBUtil::checkInt32($var);
        $this->PosY = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional double LineMaxWidth = 17;</code>
     * @return float
     */
    public function getLineMaxWidth()
    {
        return isset($this->LineMaxWidth) ? $this->LineMaxWidth : 0.0;
    }

    public function hasLineMaxWidth()
    {
        return isset($this->LineMaxWidth);
    }

    public function clearLineMaxWidth()
    {
        unset($this->LineMaxWidth);
    }

    /**
     * Generated from protobuf field <code>optional double LineMaxWidth = 17;</code>
     * @param float $var
     * @return $this
     */
    public function setLineMaxWidth($var)
    {
        GPBUtil::checkDouble($var);
        $this->LineMaxWidth = $var;

        return $this;
    }

}

